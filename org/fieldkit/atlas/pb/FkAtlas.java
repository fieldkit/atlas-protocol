// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fk-atlas.proto

package org.fieldkit.atlas.pb;

public final class FkAtlas {
  private FkAtlas() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code fk_atlas.SensorType}
   */
  public enum SensorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SENSOR_NONE = 0;</code>
     */
    SENSOR_NONE(0),
    /**
     * <code>SENSOR_PH = 1;</code>
     */
    SENSOR_PH(1),
    /**
     * <code>SENSOR_TEMP = 2;</code>
     */
    SENSOR_TEMP(2),
    /**
     * <code>SENSOR_ORP = 3;</code>
     */
    SENSOR_ORP(3),
    /**
     * <code>SENSOR_DO = 4;</code>
     */
    SENSOR_DO(4),
    /**
     * <code>SENSOR_EC = 5;</code>
     */
    SENSOR_EC(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SENSOR_NONE = 0;</code>
     */
    public static final int SENSOR_NONE_VALUE = 0;
    /**
     * <code>SENSOR_PH = 1;</code>
     */
    public static final int SENSOR_PH_VALUE = 1;
    /**
     * <code>SENSOR_TEMP = 2;</code>
     */
    public static final int SENSOR_TEMP_VALUE = 2;
    /**
     * <code>SENSOR_ORP = 3;</code>
     */
    public static final int SENSOR_ORP_VALUE = 3;
    /**
     * <code>SENSOR_DO = 4;</code>
     */
    public static final int SENSOR_DO_VALUE = 4;
    /**
     * <code>SENSOR_EC = 5;</code>
     */
    public static final int SENSOR_EC_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SensorType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SensorType forNumber(int value) {
      switch (value) {
        case 0: return SENSOR_NONE;
        case 1: return SENSOR_PH;
        case 2: return SENSOR_TEMP;
        case 3: return SENSOR_ORP;
        case 4: return SENSOR_DO;
        case 5: return SENSOR_EC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SensorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
            public SensorType findValueByNumber(int number) {
              return SensorType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(0);
    }

    private static final SensorType[] VALUES = values();

    public static SensorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SensorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.SensorType)
  }

  /**
   * Protobuf enum {@code fk_atlas.QueryType}
   */
  public enum QueryType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>QUERY_NONE = 0;</code>
     */
    QUERY_NONE(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>QUERY_NONE = 0;</code>
     */
    public static final int QUERY_NONE_VALUE = 0;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static QueryType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static QueryType forNumber(int value) {
      switch (value) {
        case 0: return QUERY_NONE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<QueryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        QueryType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<QueryType>() {
            public QueryType findValueByNumber(int number) {
              return QueryType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(1);
    }

    private static final QueryType[] VALUES = values();

    public static QueryType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private QueryType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.QueryType)
  }

  /**
   * Protobuf enum {@code fk_atlas.CalibrationOperation}
   */
  public enum CalibrationOperation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CALIBRATION_NONE = 0;</code>
     */
    CALIBRATION_NONE(0),
    /**
     * <code>CALIBRATION_STATUS = 1;</code>
     */
    CALIBRATION_STATUS(1),
    /**
     * <code>CALIBRATION_CLEAR = 2;</code>
     */
    CALIBRATION_CLEAR(2),
    /**
     * <code>CALIBRATION_SET = 3;</code>
     */
    CALIBRATION_SET(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CALIBRATION_NONE = 0;</code>
     */
    public static final int CALIBRATION_NONE_VALUE = 0;
    /**
     * <code>CALIBRATION_STATUS = 1;</code>
     */
    public static final int CALIBRATION_STATUS_VALUE = 1;
    /**
     * <code>CALIBRATION_CLEAR = 2;</code>
     */
    public static final int CALIBRATION_CLEAR_VALUE = 2;
    /**
     * <code>CALIBRATION_SET = 3;</code>
     */
    public static final int CALIBRATION_SET_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CalibrationOperation valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CalibrationOperation forNumber(int value) {
      switch (value) {
        case 0: return CALIBRATION_NONE;
        case 1: return CALIBRATION_STATUS;
        case 2: return CALIBRATION_CLEAR;
        case 3: return CALIBRATION_SET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CalibrationOperation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CalibrationOperation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CalibrationOperation>() {
            public CalibrationOperation findValueByNumber(int number) {
              return CalibrationOperation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(2);
    }

    private static final CalibrationOperation[] VALUES = values();

    public static CalibrationOperation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CalibrationOperation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.CalibrationOperation)
  }

  /**
   * Protobuf enum {@code fk_atlas.TempCalibrations}
   */
  public enum TempCalibrations
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TEMP_NONE = 0;</code>
     */
    TEMP_NONE(0),
    /**
     * <code>TEMP_SINGLE = 1;</code>
     */
    TEMP_SINGLE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TEMP_NONE = 0;</code>
     */
    public static final int TEMP_NONE_VALUE = 0;
    /**
     * <code>TEMP_SINGLE = 1;</code>
     */
    public static final int TEMP_SINGLE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TempCalibrations valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TempCalibrations forNumber(int value) {
      switch (value) {
        case 0: return TEMP_NONE;
        case 1: return TEMP_SINGLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TempCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TempCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TempCalibrations>() {
            public TempCalibrations findValueByNumber(int number) {
              return TempCalibrations.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(3);
    }

    private static final TempCalibrations[] VALUES = values();

    public static TempCalibrations valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TempCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.TempCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.DoCalibrations}
   */
  public enum DoCalibrations
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DO_NONE = 0;</code>
     */
    DO_NONE(0),
    /**
     * <code>DO_ATMOSPHERE = 1;</code>
     */
    DO_ATMOSPHERE(1),
    /**
     * <code>DO_ZERO = 2;</code>
     */
    DO_ZERO(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DO_NONE = 0;</code>
     */
    public static final int DO_NONE_VALUE = 0;
    /**
     * <code>DO_ATMOSPHERE = 1;</code>
     */
    public static final int DO_ATMOSPHERE_VALUE = 1;
    /**
     * <code>DO_ZERO = 2;</code>
     */
    public static final int DO_ZERO_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DoCalibrations valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DoCalibrations forNumber(int value) {
      switch (value) {
        case 0: return DO_NONE;
        case 1: return DO_ATMOSPHERE;
        case 2: return DO_ZERO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DoCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DoCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DoCalibrations>() {
            public DoCalibrations findValueByNumber(int number) {
              return DoCalibrations.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(4);
    }

    private static final DoCalibrations[] VALUES = values();

    public static DoCalibrations valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DoCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.DoCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.PhCalibrations}
   */
  public enum PhCalibrations
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PH_NONE = 0;</code>
     */
    PH_NONE(0),
    /**
     * <code>PH_LOW = 1;</code>
     */
    PH_LOW(1),
    /**
     * <code>PH_MIDDLE = 2;</code>
     */
    PH_MIDDLE(2),
    /**
     * <code>PH_HIGH = 4;</code>
     */
    PH_HIGH(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PH_NONE = 0;</code>
     */
    public static final int PH_NONE_VALUE = 0;
    /**
     * <code>PH_LOW = 1;</code>
     */
    public static final int PH_LOW_VALUE = 1;
    /**
     * <code>PH_MIDDLE = 2;</code>
     */
    public static final int PH_MIDDLE_VALUE = 2;
    /**
     * <code>PH_HIGH = 4;</code>
     */
    public static final int PH_HIGH_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PhCalibrations valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PhCalibrations forNumber(int value) {
      switch (value) {
        case 0: return PH_NONE;
        case 1: return PH_LOW;
        case 2: return PH_MIDDLE;
        case 4: return PH_HIGH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PhCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PhCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PhCalibrations>() {
            public PhCalibrations findValueByNumber(int number) {
              return PhCalibrations.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(5);
    }

    private static final PhCalibrations[] VALUES = values();

    public static PhCalibrations valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PhCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.PhCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.PhCalibrateCommand}
   */
  public enum PhCalibrateCommand
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CALIBRATE_PH_NONE = 0;</code>
     */
    CALIBRATE_PH_NONE(0),
    /**
     * <code>CALIBRATE_PH_CLEAR = 1;</code>
     */
    CALIBRATE_PH_CLEAR(1),
    /**
     * <code>CALIBRATE_PH_LOW = 2;</code>
     */
    CALIBRATE_PH_LOW(2),
    /**
     * <code>CALIBRATE_PH_MIDDLE = 3;</code>
     */
    CALIBRATE_PH_MIDDLE(3),
    /**
     * <code>CALIBRATE_PH_HIGH = 4;</code>
     */
    CALIBRATE_PH_HIGH(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CALIBRATE_PH_NONE = 0;</code>
     */
    public static final int CALIBRATE_PH_NONE_VALUE = 0;
    /**
     * <code>CALIBRATE_PH_CLEAR = 1;</code>
     */
    public static final int CALIBRATE_PH_CLEAR_VALUE = 1;
    /**
     * <code>CALIBRATE_PH_LOW = 2;</code>
     */
    public static final int CALIBRATE_PH_LOW_VALUE = 2;
    /**
     * <code>CALIBRATE_PH_MIDDLE = 3;</code>
     */
    public static final int CALIBRATE_PH_MIDDLE_VALUE = 3;
    /**
     * <code>CALIBRATE_PH_HIGH = 4;</code>
     */
    public static final int CALIBRATE_PH_HIGH_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PhCalibrateCommand valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PhCalibrateCommand forNumber(int value) {
      switch (value) {
        case 0: return CALIBRATE_PH_NONE;
        case 1: return CALIBRATE_PH_CLEAR;
        case 2: return CALIBRATE_PH_LOW;
        case 3: return CALIBRATE_PH_MIDDLE;
        case 4: return CALIBRATE_PH_HIGH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PhCalibrateCommand>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PhCalibrateCommand> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PhCalibrateCommand>() {
            public PhCalibrateCommand findValueByNumber(int number) {
              return PhCalibrateCommand.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(6);
    }

    private static final PhCalibrateCommand[] VALUES = values();

    public static PhCalibrateCommand valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PhCalibrateCommand(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.PhCalibrateCommand)
  }

  /**
   * Protobuf enum {@code fk_atlas.EcCalibrations}
   */
  public enum EcCalibrations
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EC_NONE = 0;</code>
     */
    EC_NONE(0),
    /**
     * <code>EC_DRY = 1;</code>
     */
    EC_DRY(1),
    /**
     * <code>EC_SINGLE = 2;</code>
     */
    EC_SINGLE(2),
    /**
     * <code>EC_DUAL_LOW = 4;</code>
     */
    EC_DUAL_LOW(4),
    /**
     * <code>EC_DUAL_HIGH = 8;</code>
     */
    EC_DUAL_HIGH(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>EC_NONE = 0;</code>
     */
    public static final int EC_NONE_VALUE = 0;
    /**
     * <code>EC_DRY = 1;</code>
     */
    public static final int EC_DRY_VALUE = 1;
    /**
     * <code>EC_SINGLE = 2;</code>
     */
    public static final int EC_SINGLE_VALUE = 2;
    /**
     * <code>EC_DUAL_LOW = 4;</code>
     */
    public static final int EC_DUAL_LOW_VALUE = 4;
    /**
     * <code>EC_DUAL_HIGH = 8;</code>
     */
    public static final int EC_DUAL_HIGH_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EcCalibrations valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EcCalibrations forNumber(int value) {
      switch (value) {
        case 0: return EC_NONE;
        case 1: return EC_DRY;
        case 2: return EC_SINGLE;
        case 4: return EC_DUAL_LOW;
        case 8: return EC_DUAL_HIGH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EcCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EcCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EcCalibrations>() {
            public EcCalibrations findValueByNumber(int number) {
              return EcCalibrations.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(7);
    }

    private static final EcCalibrations[] VALUES = values();

    public static EcCalibrations valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EcCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.EcCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.OrpCalibrations}
   */
  public enum OrpCalibrations
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ORP_NONE = 0;</code>
     */
    ORP_NONE(0),
    /**
     * <code>ORP_SINGLE = 1;</code>
     */
    ORP_SINGLE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORP_NONE = 0;</code>
     */
    public static final int ORP_NONE_VALUE = 0;
    /**
     * <code>ORP_SINGLE = 1;</code>
     */
    public static final int ORP_SINGLE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrpCalibrations valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OrpCalibrations forNumber(int value) {
      switch (value) {
        case 0: return ORP_NONE;
        case 1: return ORP_SINGLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrpCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrpCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrpCalibrations>() {
            public OrpCalibrations findValueByNumber(int number) {
              return OrpCalibrations.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(8);
    }

    private static final OrpCalibrations[] VALUES = values();

    public static OrpCalibrations valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrpCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.OrpCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.ReplyType}
   */
  public enum ReplyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REPLY_NONE = 0;</code>
     */
    REPLY_NONE(0),
    /**
     * <code>REPLY_RETRY = 1;</code>
     */
    REPLY_RETRY(1),
    /**
     * <code>REPLY_ERROR = 2;</code>
     */
    REPLY_ERROR(2),
    /**
     * <code>REPLY_STATUS = 3;</code>
     */
    REPLY_STATUS(3),
    /**
     * <code>REPLY_COMMAND = 4;</code>
     */
    REPLY_COMMAND(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>REPLY_NONE = 0;</code>
     */
    public static final int REPLY_NONE_VALUE = 0;
    /**
     * <code>REPLY_RETRY = 1;</code>
     */
    public static final int REPLY_RETRY_VALUE = 1;
    /**
     * <code>REPLY_ERROR = 2;</code>
     */
    public static final int REPLY_ERROR_VALUE = 2;
    /**
     * <code>REPLY_STATUS = 3;</code>
     */
    public static final int REPLY_STATUS_VALUE = 3;
    /**
     * <code>REPLY_COMMAND = 4;</code>
     */
    public static final int REPLY_COMMAND_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReplyType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ReplyType forNumber(int value) {
      switch (value) {
        case 0: return REPLY_NONE;
        case 1: return REPLY_RETRY;
        case 2: return REPLY_ERROR;
        case 3: return REPLY_STATUS;
        case 4: return REPLY_COMMAND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReplyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReplyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReplyType>() {
            public ReplyType findValueByNumber(int number) {
              return ReplyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(9);
    }

    private static final ReplyType[] VALUES = values();

    public static ReplyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReplyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.ReplyType)
  }

  /**
   * Protobuf enum {@code fk_atlas.ErrorType}
   */
  public enum ErrorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>GENERAL = 1;</code>
     */
    GENERAL(1),
    /**
     * <code>UNEXPECTED = 2;</code>
     */
    UNEXPECTED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>GENERAL = 1;</code>
     */
    public static final int GENERAL_VALUE = 1;
    /**
     * <code>UNEXPECTED = 2;</code>
     */
    public static final int UNEXPECTED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErrorType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ErrorType forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return GENERAL;
        case 2: return UNEXPECTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErrorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorType>() {
            public ErrorType findValueByNumber(int number) {
              return ErrorType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.getDescriptor().getEnumTypes().get(10);
    }

    private static final ErrorType[] VALUES = values();

    public static ErrorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ErrorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.ErrorType)
  }

  public interface AtlasCalibrationCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.AtlasCalibrationCommand)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @return The enum numeric value on the wire for operation.
     */
    int getOperationValue();
    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @return The operation.
     */
    org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation getOperation();

    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @return The enum numeric value on the wire for temp.
     */
    int getTempValue();
    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @return The temp.
     */
    org.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp();

    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @return The enum numeric value on the wire for dissolvedOxygen.
     */
    int getDissolvedOxygenValue();
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @return The dissolvedOxygen.
     */
    org.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen();

    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @return The enum numeric value on the wire for ph.
     */
    int getPhValue();
    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @return The ph.
     */
    org.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh();

    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @return The enum numeric value on the wire for ec.
     */
    int getEcValue();
    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @return The ec.
     */
    org.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc();

    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @return The enum numeric value on the wire for orp.
     */
    int getOrpValue();
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @return The orp.
     */
    org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp();

    /**
     * <code>uint32 which = 8;</code>
     * @return The which.
     */
    int getWhich();

    /**
     * <code>float value = 7;</code>
     * @return The value.
     */
    float getValue();
  }
  /**
   * Protobuf type {@code fk_atlas.AtlasCalibrationCommand}
   */
  public  static final class AtlasCalibrationCommand extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:fk_atlas.AtlasCalibrationCommand)
      AtlasCalibrationCommandOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AtlasCalibrationCommand.newBuilder() to construct.
    private AtlasCalibrationCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AtlasCalibrationCommand() {
      operation_ = 0;
      temp_ = 0;
      dissolvedOxygen_ = 0;
      ph_ = 0;
      ec_ = 0;
      orp_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AtlasCalibrationCommand();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AtlasCalibrationCommand(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              operation_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              temp_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              dissolvedOxygen_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              ph_ = rawValue;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              ec_ = rawValue;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              orp_ = rawValue;
              break;
            }
            case 61: {

              value_ = input.readFloat();
              break;
            }
            case 64: {

              which_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationCommand_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.class, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.Builder.class);
    }

    public static final int OPERATION_FIELD_NUMBER = 1;
    private int operation_;
    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @return The enum numeric value on the wire for operation.
     */
    public int getOperationValue() {
      return operation_;
    }
    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @return The operation.
     */
    public org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation getOperation() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation result = org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation.valueOf(operation_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation.UNRECOGNIZED : result;
    }

    public static final int TEMP_FIELD_NUMBER = 2;
    private int temp_;
    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @return The enum numeric value on the wire for temp.
     */
    public int getTempValue() {
      return temp_;
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @return The temp.
     */
    public org.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.TempCalibrations result = org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.valueOf(temp_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.UNRECOGNIZED : result;
    }

    public static final int DISSOLVEDOXYGEN_FIELD_NUMBER = 3;
    private int dissolvedOxygen_;
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @return The enum numeric value on the wire for dissolvedOxygen.
     */
    public int getDissolvedOxygenValue() {
      return dissolvedOxygen_;
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @return The dissolvedOxygen.
     */
    public org.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.DoCalibrations result = org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.valueOf(dissolvedOxygen_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.UNRECOGNIZED : result;
    }

    public static final int PH_FIELD_NUMBER = 4;
    private int ph_;
    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @return The enum numeric value on the wire for ph.
     */
    public int getPhValue() {
      return ph_;
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @return The ph.
     */
    public org.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.PhCalibrations result = org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.valueOf(ph_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.UNRECOGNIZED : result;
    }

    public static final int EC_FIELD_NUMBER = 5;
    private int ec_;
    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @return The enum numeric value on the wire for ec.
     */
    public int getEcValue() {
      return ec_;
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @return The ec.
     */
    public org.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.EcCalibrations result = org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.valueOf(ec_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.UNRECOGNIZED : result;
    }

    public static final int ORP_FIELD_NUMBER = 6;
    private int orp_;
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @return The enum numeric value on the wire for orp.
     */
    public int getOrpValue() {
      return orp_;
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @return The orp.
     */
    public org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations result = org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.valueOf(orp_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.UNRECOGNIZED : result;
    }

    public static final int WHICH_FIELD_NUMBER = 8;
    private int which_;
    /**
     * <code>uint32 which = 8;</code>
     * @return The which.
     */
    public int getWhich() {
      return which_;
    }

    public static final int VALUE_FIELD_NUMBER = 7;
    private float value_;
    /**
     * <code>float value = 7;</code>
     * @return The value.
     */
    public float getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (operation_ != org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation.CALIBRATION_NONE.getNumber()) {
        output.writeEnum(1, operation_);
      }
      if (temp_ != org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.TEMP_NONE.getNumber()) {
        output.writeEnum(2, temp_);
      }
      if (dissolvedOxygen_ != org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.DO_NONE.getNumber()) {
        output.writeEnum(3, dissolvedOxygen_);
      }
      if (ph_ != org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.PH_NONE.getNumber()) {
        output.writeEnum(4, ph_);
      }
      if (ec_ != org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.EC_NONE.getNumber()) {
        output.writeEnum(5, ec_);
      }
      if (orp_ != org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.ORP_NONE.getNumber()) {
        output.writeEnum(6, orp_);
      }
      if (value_ != 0F) {
        output.writeFloat(7, value_);
      }
      if (which_ != 0) {
        output.writeUInt32(8, which_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (operation_ != org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation.CALIBRATION_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, operation_);
      }
      if (temp_ != org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.TEMP_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, temp_);
      }
      if (dissolvedOxygen_ != org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.DO_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, dissolvedOxygen_);
      }
      if (ph_ != org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.PH_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, ph_);
      }
      if (ec_ != org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.EC_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, ec_);
      }
      if (orp_ != org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.ORP_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, orp_);
      }
      if (value_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, value_);
      }
      if (which_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, which_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand)) {
        return super.equals(obj);
      }
      org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand other = (org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand) obj;

      if (operation_ != other.operation_) return false;
      if (temp_ != other.temp_) return false;
      if (dissolvedOxygen_ != other.dissolvedOxygen_) return false;
      if (ph_ != other.ph_) return false;
      if (ec_ != other.ec_) return false;
      if (orp_ != other.orp_) return false;
      if (getWhich()
          != other.getWhich()) return false;
      if (java.lang.Float.floatToIntBits(getValue())
          != java.lang.Float.floatToIntBits(
              other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OPERATION_FIELD_NUMBER;
      hash = (53 * hash) + operation_;
      hash = (37 * hash) + TEMP_FIELD_NUMBER;
      hash = (53 * hash) + temp_;
      hash = (37 * hash) + DISSOLVEDOXYGEN_FIELD_NUMBER;
      hash = (53 * hash) + dissolvedOxygen_;
      hash = (37 * hash) + PH_FIELD_NUMBER;
      hash = (53 * hash) + ph_;
      hash = (37 * hash) + EC_FIELD_NUMBER;
      hash = (53 * hash) + ec_;
      hash = (37 * hash) + ORP_FIELD_NUMBER;
      hash = (53 * hash) + orp_;
      hash = (37 * hash) + WHICH_FIELD_NUMBER;
      hash = (53 * hash) + getWhich();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getValue());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fk_atlas.AtlasCalibrationCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.AtlasCalibrationCommand)
        org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationCommand_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationCommand_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.class, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.Builder.class);
      }

      // Construct using org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        operation_ = 0;

        temp_ = 0;

        dissolvedOxygen_ = 0;

        ph_ = 0;

        ec_ = 0;

        orp_ = 0;

        which_ = 0;

        value_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationCommand_descriptor;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getDefaultInstanceForType() {
        return org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.getDefaultInstance();
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand build() {
        org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand buildPartial() {
        org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand result = new org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand(this);
        result.operation_ = operation_;
        result.temp_ = temp_;
        result.dissolvedOxygen_ = dissolvedOxygen_;
        result.ph_ = ph_;
        result.ec_ = ec_;
        result.orp_ = orp_;
        result.which_ = which_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand) {
          return mergeFrom((org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand other) {
        if (other == org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.getDefaultInstance()) return this;
        if (other.operation_ != 0) {
          setOperationValue(other.getOperationValue());
        }
        if (other.temp_ != 0) {
          setTempValue(other.getTempValue());
        }
        if (other.dissolvedOxygen_ != 0) {
          setDissolvedOxygenValue(other.getDissolvedOxygenValue());
        }
        if (other.ph_ != 0) {
          setPhValue(other.getPhValue());
        }
        if (other.ec_ != 0) {
          setEcValue(other.getEcValue());
        }
        if (other.orp_ != 0) {
          setOrpValue(other.getOrpValue());
        }
        if (other.getWhich() != 0) {
          setWhich(other.getWhich());
        }
        if (other.getValue() != 0F) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int operation_ = 0;
      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @return The enum numeric value on the wire for operation.
       */
      public int getOperationValue() {
        return operation_;
      }
      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @param value The enum numeric value on the wire for operation to set.
       * @return This builder for chaining.
       */
      public Builder setOperationValue(int value) {
        operation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @return The operation.
       */
      public org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation getOperation() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation result = org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation.valueOf(operation_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @param value The operation to set.
       * @return This builder for chaining.
       */
      public Builder setOperation(org.fieldkit.atlas.pb.FkAtlas.CalibrationOperation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        operation_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperation() {
        
        operation_ = 0;
        onChanged();
        return this;
      }

      private int temp_ = 0;
      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @return The enum numeric value on the wire for temp.
       */
      public int getTempValue() {
        return temp_;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @param value The enum numeric value on the wire for temp to set.
       * @return This builder for chaining.
       */
      public Builder setTempValue(int value) {
        temp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @return The temp.
       */
      public org.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.TempCalibrations result = org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.valueOf(temp_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @param value The temp to set.
       * @return This builder for chaining.
       */
      public Builder setTemp(org.fieldkit.atlas.pb.FkAtlas.TempCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        temp_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemp() {
        
        temp_ = 0;
        onChanged();
        return this;
      }

      private int dissolvedOxygen_ = 0;
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @return The enum numeric value on the wire for dissolvedOxygen.
       */
      public int getDissolvedOxygenValue() {
        return dissolvedOxygen_;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @param value The enum numeric value on the wire for dissolvedOxygen to set.
       * @return This builder for chaining.
       */
      public Builder setDissolvedOxygenValue(int value) {
        dissolvedOxygen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @return The dissolvedOxygen.
       */
      public org.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.DoCalibrations result = org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.valueOf(dissolvedOxygen_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @param value The dissolvedOxygen to set.
       * @return This builder for chaining.
       */
      public Builder setDissolvedOxygen(org.fieldkit.atlas.pb.FkAtlas.DoCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dissolvedOxygen_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDissolvedOxygen() {
        
        dissolvedOxygen_ = 0;
        onChanged();
        return this;
      }

      private int ph_ = 0;
      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @return The enum numeric value on the wire for ph.
       */
      public int getPhValue() {
        return ph_;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @param value The enum numeric value on the wire for ph to set.
       * @return This builder for chaining.
       */
      public Builder setPhValue(int value) {
        ph_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @return The ph.
       */
      public org.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.PhCalibrations result = org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.valueOf(ph_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @param value The ph to set.
       * @return This builder for chaining.
       */
      public Builder setPh(org.fieldkit.atlas.pb.FkAtlas.PhCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        ph_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPh() {
        
        ph_ = 0;
        onChanged();
        return this;
      }

      private int ec_ = 0;
      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @return The enum numeric value on the wire for ec.
       */
      public int getEcValue() {
        return ec_;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @param value The enum numeric value on the wire for ec to set.
       * @return This builder for chaining.
       */
      public Builder setEcValue(int value) {
        ec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @return The ec.
       */
      public org.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.EcCalibrations result = org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.valueOf(ec_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @param value The ec to set.
       * @return This builder for chaining.
       */
      public Builder setEc(org.fieldkit.atlas.pb.FkAtlas.EcCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        ec_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEc() {
        
        ec_ = 0;
        onChanged();
        return this;
      }

      private int orp_ = 0;
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @return The enum numeric value on the wire for orp.
       */
      public int getOrpValue() {
        return orp_;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @param value The enum numeric value on the wire for orp to set.
       * @return This builder for chaining.
       */
      public Builder setOrpValue(int value) {
        orp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @return The orp.
       */
      public org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations result = org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.valueOf(orp_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @param value The orp to set.
       * @return This builder for chaining.
       */
      public Builder setOrp(org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        orp_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrp() {
        
        orp_ = 0;
        onChanged();
        return this;
      }

      private int which_ ;
      /**
       * <code>uint32 which = 8;</code>
       * @return The which.
       */
      public int getWhich() {
        return which_;
      }
      /**
       * <code>uint32 which = 8;</code>
       * @param value The which to set.
       * @return This builder for chaining.
       */
      public Builder setWhich(int value) {
        
        which_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 which = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearWhich() {
        
        which_ = 0;
        onChanged();
        return this;
      }

      private float value_ ;
      /**
       * <code>float value = 7;</code>
       * @return The value.
       */
      public float getValue() {
        return value_;
      }
      /**
       * <code>float value = 7;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(float value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float value = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:fk_atlas.AtlasCalibrationCommand)
    }

    // @@protoc_insertion_point(class_scope:fk_atlas.AtlasCalibrationCommand)
    private static final org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand();
    }

    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AtlasCalibrationCommand>
        PARSER = new com.google.protobuf.AbstractParser<AtlasCalibrationCommand>() {
      @java.lang.Override
      public AtlasCalibrationCommand parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AtlasCalibrationCommand(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AtlasCalibrationCommand> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AtlasCalibrationCommand> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TwoWireQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.TwoWireQuery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 read = 1;</code>
     * @return The read.
     */
    int getRead();

    /**
     * <code>uint32 write = 2;</code>
     * @return The write.
     */
    int getWrite();

    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code fk_atlas.TwoWireQuery}
   */
  public  static final class TwoWireQuery extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:fk_atlas.TwoWireQuery)
      TwoWireQueryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TwoWireQuery.newBuilder() to construct.
    private TwoWireQuery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TwoWireQuery() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TwoWireQuery();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TwoWireQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              read_ = input.readUInt32();
              break;
            }
            case 16: {

              write_ = input.readUInt32();
              break;
            }
            case 26: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireQuery_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.class, org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.Builder.class);
    }

    public static final int READ_FIELD_NUMBER = 1;
    private int read_;
    /**
     * <code>uint32 read = 1;</code>
     * @return The read.
     */
    public int getRead() {
      return read_;
    }

    public static final int WRITE_FIELD_NUMBER = 2;
    private int write_;
    /**
     * <code>uint32 write = 2;</code>
     * @return The write.
     */
    public int getWrite() {
      return write_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (read_ != 0) {
        output.writeUInt32(1, read_);
      }
      if (write_ != 0) {
        output.writeUInt32(2, write_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(3, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (read_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, read_);
      }
      if (write_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, write_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery)) {
        return super.equals(obj);
      }
      org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery other = (org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery) obj;

      if (getRead()
          != other.getRead()) return false;
      if (getWrite()
          != other.getWrite()) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + READ_FIELD_NUMBER;
      hash = (53 * hash) + getRead();
      hash = (37 * hash) + WRITE_FIELD_NUMBER;
      hash = (53 * hash) + getWrite();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fk_atlas.TwoWireQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.TwoWireQuery)
        org.fieldkit.atlas.pb.FkAtlas.TwoWireQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireQuery_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.class, org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.Builder.class);
      }

      // Construct using org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        read_ = 0;

        write_ = 0;

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireQuery_descriptor;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getDefaultInstanceForType() {
        return org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.getDefaultInstance();
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery build() {
        org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery buildPartial() {
        org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery result = new org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery(this);
        result.read_ = read_;
        result.write_ = write_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery) {
          return mergeFrom((org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery other) {
        if (other == org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.getDefaultInstance()) return this;
        if (other.getRead() != 0) {
          setRead(other.getRead());
        }
        if (other.getWrite() != 0) {
          setWrite(other.getWrite());
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int read_ ;
      /**
       * <code>uint32 read = 1;</code>
       * @return The read.
       */
      public int getRead() {
        return read_;
      }
      /**
       * <code>uint32 read = 1;</code>
       * @param value The read to set.
       * @return This builder for chaining.
       */
      public Builder setRead(int value) {
        
        read_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 read = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRead() {
        
        read_ = 0;
        onChanged();
        return this;
      }

      private int write_ ;
      /**
       * <code>uint32 write = 2;</code>
       * @return The write.
       */
      public int getWrite() {
        return write_;
      }
      /**
       * <code>uint32 write = 2;</code>
       * @param value The write to set.
       * @return This builder for chaining.
       */
      public Builder setWrite(int value) {
        
        write_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 write = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWrite() {
        
        write_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 3;</code>
       * @return The data.
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 3;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:fk_atlas.TwoWireQuery)
    }

    // @@protoc_insertion_point(class_scope:fk_atlas.TwoWireQuery)
    private static final org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery();
    }

    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TwoWireQuery>
        PARSER = new com.google.protobuf.AbstractParser<TwoWireQuery>() {
      @java.lang.Override
      public TwoWireQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TwoWireQuery(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TwoWireQuery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TwoWireQuery> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WireAtlasQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.WireAtlasQuery)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @return The type.
     */
    org.fieldkit.atlas.pb.FkAtlas.QueryType getType();

    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     * @return Whether the calibration field is set.
     */
    boolean hasCalibration();
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     * @return The calibration.
     */
    org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getCalibration();
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     */
    org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommandOrBuilder getCalibrationOrBuilder();

    /**
     * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
     * @return Whether the wire field is set.
     */
    boolean hasWire();
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
     * @return The wire.
     */
    org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getWire();
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
     */
    org.fieldkit.atlas.pb.FkAtlas.TwoWireQueryOrBuilder getWireOrBuilder();
  }
  /**
   * Protobuf type {@code fk_atlas.WireAtlasQuery}
   */
  public  static final class WireAtlasQuery extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:fk_atlas.WireAtlasQuery)
      WireAtlasQueryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WireAtlasQuery.newBuilder() to construct.
    private WireAtlasQuery(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WireAtlasQuery() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WireAtlasQuery();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WireAtlasQuery(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.Builder subBuilder = null;
              if (calibration_ != null) {
                subBuilder = calibration_.toBuilder();
              }
              calibration_ = input.readMessage(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calibration_);
                calibration_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.Builder subBuilder = null;
              if (wire_ != null) {
                subBuilder = wire_.toBuilder();
              }
              wire_ = input.readMessage(org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wire_);
                wire_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasQuery_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasQuery_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery.class, org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @return The type.
     */
    public org.fieldkit.atlas.pb.FkAtlas.QueryType getType() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.QueryType result = org.fieldkit.atlas.pb.FkAtlas.QueryType.valueOf(type_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.QueryType.UNRECOGNIZED : result;
    }

    public static final int CALIBRATION_FIELD_NUMBER = 2;
    private org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand calibration_;
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     * @return Whether the calibration field is set.
     */
    public boolean hasCalibration() {
      return calibration_ != null;
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     * @return The calibration.
     */
    public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getCalibration() {
      return calibration_ == null ? org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.getDefaultInstance() : calibration_;
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     */
    public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommandOrBuilder getCalibrationOrBuilder() {
      return getCalibration();
    }

    public static final int WIRE_FIELD_NUMBER = 3;
    private org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery wire_;
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
     * @return Whether the wire field is set.
     */
    public boolean hasWire() {
      return wire_ != null;
    }
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
     * @return The wire.
     */
    public org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getWire() {
      return wire_ == null ? org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.getDefaultInstance() : wire_;
    }
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
     */
    public org.fieldkit.atlas.pb.FkAtlas.TwoWireQueryOrBuilder getWireOrBuilder() {
      return getWire();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.fieldkit.atlas.pb.FkAtlas.QueryType.QUERY_NONE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (calibration_ != null) {
        output.writeMessage(2, getCalibration());
      }
      if (wire_ != null) {
        output.writeMessage(3, getWire());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.fieldkit.atlas.pb.FkAtlas.QueryType.QUERY_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (calibration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCalibration());
      }
      if (wire_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getWire());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery)) {
        return super.equals(obj);
      }
      org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery other = (org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery) obj;

      if (type_ != other.type_) return false;
      if (hasCalibration() != other.hasCalibration()) return false;
      if (hasCalibration()) {
        if (!getCalibration()
            .equals(other.getCalibration())) return false;
      }
      if (hasWire() != other.hasWire()) return false;
      if (hasWire()) {
        if (!getWire()
            .equals(other.getWire())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasCalibration()) {
        hash = (37 * hash) + CALIBRATION_FIELD_NUMBER;
        hash = (53 * hash) + getCalibration().hashCode();
      }
      if (hasWire()) {
        hash = (37 * hash) + WIRE_FIELD_NUMBER;
        hash = (53 * hash) + getWire().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fk_atlas.WireAtlasQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.WireAtlasQuery)
        org.fieldkit.atlas.pb.FkAtlas.WireAtlasQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasQuery_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasQuery_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery.class, org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery.Builder.class);
      }

      // Construct using org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (calibrationBuilder_ == null) {
          calibration_ = null;
        } else {
          calibration_ = null;
          calibrationBuilder_ = null;
        }
        if (wireBuilder_ == null) {
          wire_ = null;
        } else {
          wire_ = null;
          wireBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasQuery_descriptor;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery getDefaultInstanceForType() {
        return org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery.getDefaultInstance();
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery build() {
        org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery buildPartial() {
        org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery result = new org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery(this);
        result.type_ = type_;
        if (calibrationBuilder_ == null) {
          result.calibration_ = calibration_;
        } else {
          result.calibration_ = calibrationBuilder_.build();
        }
        if (wireBuilder_ == null) {
          result.wire_ = wire_;
        } else {
          result.wire_ = wireBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery) {
          return mergeFrom((org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery other) {
        if (other == org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasCalibration()) {
          mergeCalibration(other.getCalibration());
        }
        if (other.hasWire()) {
          mergeWire(other.getWire());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @return The type.
       */
      public org.fieldkit.atlas.pb.FkAtlas.QueryType getType() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.QueryType result = org.fieldkit.atlas.pb.FkAtlas.QueryType.valueOf(type_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.QueryType.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.fieldkit.atlas.pb.FkAtlas.QueryType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand calibration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.Builder, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommandOrBuilder> calibrationBuilder_;
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       * @return Whether the calibration field is set.
       */
      public boolean hasCalibration() {
        return calibrationBuilder_ != null || calibration_ != null;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       * @return The calibration.
       */
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getCalibration() {
        if (calibrationBuilder_ == null) {
          return calibration_ == null ? org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.getDefaultInstance() : calibration_;
        } else {
          return calibrationBuilder_.getMessage();
        }
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public Builder setCalibration(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand value) {
        if (calibrationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calibration_ = value;
          onChanged();
        } else {
          calibrationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public Builder setCalibration(
          org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.Builder builderForValue) {
        if (calibrationBuilder_ == null) {
          calibration_ = builderForValue.build();
          onChanged();
        } else {
          calibrationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public Builder mergeCalibration(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand value) {
        if (calibrationBuilder_ == null) {
          if (calibration_ != null) {
            calibration_ =
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.newBuilder(calibration_).mergeFrom(value).buildPartial();
          } else {
            calibration_ = value;
          }
          onChanged();
        } else {
          calibrationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public Builder clearCalibration() {
        if (calibrationBuilder_ == null) {
          calibration_ = null;
          onChanged();
        } else {
          calibration_ = null;
          calibrationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.Builder getCalibrationBuilder() {
        
        onChanged();
        return getCalibrationFieldBuilder().getBuilder();
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommandOrBuilder getCalibrationOrBuilder() {
        if (calibrationBuilder_ != null) {
          return calibrationBuilder_.getMessageOrBuilder();
        } else {
          return calibration_ == null ?
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.getDefaultInstance() : calibration_;
        }
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.Builder, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommandOrBuilder> 
          getCalibrationFieldBuilder() {
        if (calibrationBuilder_ == null) {
          calibrationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.Builder, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommandOrBuilder>(
                  getCalibration(),
                  getParentForChildren(),
                  isClean());
          calibration_ = null;
        }
        return calibrationBuilder_;
      }

      private org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery wire_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery, org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.Builder, org.fieldkit.atlas.pb.FkAtlas.TwoWireQueryOrBuilder> wireBuilder_;
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
       * @return Whether the wire field is set.
       */
      public boolean hasWire() {
        return wireBuilder_ != null || wire_ != null;
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
       * @return The wire.
       */
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getWire() {
        if (wireBuilder_ == null) {
          return wire_ == null ? org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.getDefaultInstance() : wire_;
        } else {
          return wireBuilder_.getMessage();
        }
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
       */
      public Builder setWire(org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery value) {
        if (wireBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wire_ = value;
          onChanged();
        } else {
          wireBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
       */
      public Builder setWire(
          org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.Builder builderForValue) {
        if (wireBuilder_ == null) {
          wire_ = builderForValue.build();
          onChanged();
        } else {
          wireBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
       */
      public Builder mergeWire(org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery value) {
        if (wireBuilder_ == null) {
          if (wire_ != null) {
            wire_ =
              org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.newBuilder(wire_).mergeFrom(value).buildPartial();
          } else {
            wire_ = value;
          }
          onChanged();
        } else {
          wireBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
       */
      public Builder clearWire() {
        if (wireBuilder_ == null) {
          wire_ = null;
          onChanged();
        } else {
          wire_ = null;
          wireBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.Builder getWireBuilder() {
        
        onChanged();
        return getWireFieldBuilder().getBuilder();
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireQueryOrBuilder getWireOrBuilder() {
        if (wireBuilder_ != null) {
          return wireBuilder_.getMessageOrBuilder();
        } else {
          return wire_ == null ?
              org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.getDefaultInstance() : wire_;
        }
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery, org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.Builder, org.fieldkit.atlas.pb.FkAtlas.TwoWireQueryOrBuilder> 
          getWireFieldBuilder() {
        if (wireBuilder_ == null) {
          wireBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery, org.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.Builder, org.fieldkit.atlas.pb.FkAtlas.TwoWireQueryOrBuilder>(
                  getWire(),
                  getParentForChildren(),
                  isClean());
          wire_ = null;
        }
        return wireBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:fk_atlas.WireAtlasQuery)
    }

    // @@protoc_insertion_point(class_scope:fk_atlas.WireAtlasQuery)
    private static final org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery();
    }

    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WireAtlasQuery>
        PARSER = new com.google.protobuf.AbstractParser<WireAtlasQuery>() {
      @java.lang.Override
      public WireAtlasQuery parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WireAtlasQuery(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WireAtlasQuery> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WireAtlasQuery> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AtlasCalibrationStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.AtlasCalibrationStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @return The type.
     */
    org.fieldkit.atlas.pb.FkAtlas.SensorType getType();

    /**
     * <code>uint32 time = 2;</code>
     * @return The time.
     */
    int getTime();

    /**
     * <code>uint32 raw = 8;</code>
     * @return The raw.
     */
    int getRaw();

    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @return The enum numeric value on the wire for temp.
     */
    int getTempValue();
    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @return The temp.
     */
    org.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp();

    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @return The enum numeric value on the wire for dissolvedOxygen.
     */
    int getDissolvedOxygenValue();
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @return The dissolvedOxygen.
     */
    org.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen();

    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @return The enum numeric value on the wire for ph.
     */
    int getPhValue();
    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @return The ph.
     */
    org.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh();

    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @return The enum numeric value on the wire for ec.
     */
    int getEcValue();
    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @return The ec.
     */
    org.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc();

    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @return The enum numeric value on the wire for orp.
     */
    int getOrpValue();
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @return The orp.
     */
    org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp();
  }
  /**
   * Protobuf type {@code fk_atlas.AtlasCalibrationStatus}
   */
  public  static final class AtlasCalibrationStatus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:fk_atlas.AtlasCalibrationStatus)
      AtlasCalibrationStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AtlasCalibrationStatus.newBuilder() to construct.
    private AtlasCalibrationStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AtlasCalibrationStatus() {
      type_ = 0;
      temp_ = 0;
      dissolvedOxygen_ = 0;
      ph_ = 0;
      ec_ = 0;
      orp_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AtlasCalibrationStatus();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AtlasCalibrationStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 16: {

              time_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              temp_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              dissolvedOxygen_ = rawValue;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              ph_ = rawValue;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              ec_ = rawValue;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              orp_ = rawValue;
              break;
            }
            case 64: {

              raw_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.class, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @return The type.
     */
    public org.fieldkit.atlas.pb.FkAtlas.SensorType getType() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.SensorType result = org.fieldkit.atlas.pb.FkAtlas.SensorType.valueOf(type_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.SensorType.UNRECOGNIZED : result;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>uint32 time = 2;</code>
     * @return The time.
     */
    public int getTime() {
      return time_;
    }

    public static final int RAW_FIELD_NUMBER = 8;
    private int raw_;
    /**
     * <code>uint32 raw = 8;</code>
     * @return The raw.
     */
    public int getRaw() {
      return raw_;
    }

    public static final int TEMP_FIELD_NUMBER = 3;
    private int temp_;
    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @return The enum numeric value on the wire for temp.
     */
    public int getTempValue() {
      return temp_;
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @return The temp.
     */
    public org.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.TempCalibrations result = org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.valueOf(temp_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.UNRECOGNIZED : result;
    }

    public static final int DISSOLVEDOXYGEN_FIELD_NUMBER = 4;
    private int dissolvedOxygen_;
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @return The enum numeric value on the wire for dissolvedOxygen.
     */
    public int getDissolvedOxygenValue() {
      return dissolvedOxygen_;
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @return The dissolvedOxygen.
     */
    public org.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.DoCalibrations result = org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.valueOf(dissolvedOxygen_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.UNRECOGNIZED : result;
    }

    public static final int PH_FIELD_NUMBER = 5;
    private int ph_;
    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @return The enum numeric value on the wire for ph.
     */
    public int getPhValue() {
      return ph_;
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @return The ph.
     */
    public org.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.PhCalibrations result = org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.valueOf(ph_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.UNRECOGNIZED : result;
    }

    public static final int EC_FIELD_NUMBER = 6;
    private int ec_;
    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @return The enum numeric value on the wire for ec.
     */
    public int getEcValue() {
      return ec_;
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @return The ec.
     */
    public org.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.EcCalibrations result = org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.valueOf(ec_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.UNRECOGNIZED : result;
    }

    public static final int ORP_FIELD_NUMBER = 7;
    private int orp_;
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @return The enum numeric value on the wire for orp.
     */
    public int getOrpValue() {
      return orp_;
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @return The orp.
     */
    public org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations result = org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.valueOf(orp_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.fieldkit.atlas.pb.FkAtlas.SensorType.SENSOR_NONE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (time_ != 0) {
        output.writeUInt32(2, time_);
      }
      if (temp_ != org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.TEMP_NONE.getNumber()) {
        output.writeEnum(3, temp_);
      }
      if (dissolvedOxygen_ != org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.DO_NONE.getNumber()) {
        output.writeEnum(4, dissolvedOxygen_);
      }
      if (ph_ != org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.PH_NONE.getNumber()) {
        output.writeEnum(5, ph_);
      }
      if (ec_ != org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.EC_NONE.getNumber()) {
        output.writeEnum(6, ec_);
      }
      if (orp_ != org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.ORP_NONE.getNumber()) {
        output.writeEnum(7, orp_);
      }
      if (raw_ != 0) {
        output.writeUInt32(8, raw_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.fieldkit.atlas.pb.FkAtlas.SensorType.SENSOR_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, time_);
      }
      if (temp_ != org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.TEMP_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, temp_);
      }
      if (dissolvedOxygen_ != org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.DO_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, dissolvedOxygen_);
      }
      if (ph_ != org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.PH_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, ph_);
      }
      if (ec_ != org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.EC_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, ec_);
      }
      if (orp_ != org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.ORP_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, orp_);
      }
      if (raw_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, raw_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus)) {
        return super.equals(obj);
      }
      org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus other = (org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus) obj;

      if (type_ != other.type_) return false;
      if (getTime()
          != other.getTime()) return false;
      if (getRaw()
          != other.getRaw()) return false;
      if (temp_ != other.temp_) return false;
      if (dissolvedOxygen_ != other.dissolvedOxygen_) return false;
      if (ph_ != other.ph_) return false;
      if (ec_ != other.ec_) return false;
      if (orp_ != other.orp_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + RAW_FIELD_NUMBER;
      hash = (53 * hash) + getRaw();
      hash = (37 * hash) + TEMP_FIELD_NUMBER;
      hash = (53 * hash) + temp_;
      hash = (37 * hash) + DISSOLVEDOXYGEN_FIELD_NUMBER;
      hash = (53 * hash) + dissolvedOxygen_;
      hash = (37 * hash) + PH_FIELD_NUMBER;
      hash = (53 * hash) + ph_;
      hash = (37 * hash) + EC_FIELD_NUMBER;
      hash = (53 * hash) + ec_;
      hash = (37 * hash) + ORP_FIELD_NUMBER;
      hash = (53 * hash) + orp_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fk_atlas.AtlasCalibrationStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.AtlasCalibrationStatus)
        org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.class, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.Builder.class);
      }

      // Construct using org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        time_ = 0;

        raw_ = 0;

        temp_ = 0;

        dissolvedOxygen_ = 0;

        ph_ = 0;

        ec_ = 0;

        orp_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_AtlasCalibrationStatus_descriptor;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getDefaultInstanceForType() {
        return org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.getDefaultInstance();
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus build() {
        org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus buildPartial() {
        org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus result = new org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus(this);
        result.type_ = type_;
        result.time_ = time_;
        result.raw_ = raw_;
        result.temp_ = temp_;
        result.dissolvedOxygen_ = dissolvedOxygen_;
        result.ph_ = ph_;
        result.ec_ = ec_;
        result.orp_ = orp_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus) {
          return mergeFrom((org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus other) {
        if (other == org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getRaw() != 0) {
          setRaw(other.getRaw());
        }
        if (other.temp_ != 0) {
          setTempValue(other.getTempValue());
        }
        if (other.dissolvedOxygen_ != 0) {
          setDissolvedOxygenValue(other.getDissolvedOxygenValue());
        }
        if (other.ph_ != 0) {
          setPhValue(other.getPhValue());
        }
        if (other.ec_ != 0) {
          setEcValue(other.getEcValue());
        }
        if (other.orp_ != 0) {
          setOrpValue(other.getOrpValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @return The type.
       */
      public org.fieldkit.atlas.pb.FkAtlas.SensorType getType() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.SensorType result = org.fieldkit.atlas.pb.FkAtlas.SensorType.valueOf(type_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.SensorType.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.fieldkit.atlas.pb.FkAtlas.SensorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <code>uint32 time = 2;</code>
       * @return The time.
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>uint32 time = 2;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(int value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        
        time_ = 0;
        onChanged();
        return this;
      }

      private int raw_ ;
      /**
       * <code>uint32 raw = 8;</code>
       * @return The raw.
       */
      public int getRaw() {
        return raw_;
      }
      /**
       * <code>uint32 raw = 8;</code>
       * @param value The raw to set.
       * @return This builder for chaining.
       */
      public Builder setRaw(int value) {
        
        raw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 raw = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRaw() {
        
        raw_ = 0;
        onChanged();
        return this;
      }

      private int temp_ = 0;
      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @return The enum numeric value on the wire for temp.
       */
      public int getTempValue() {
        return temp_;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @param value The enum numeric value on the wire for temp to set.
       * @return This builder for chaining.
       */
      public Builder setTempValue(int value) {
        temp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @return The temp.
       */
      public org.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.TempCalibrations result = org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.valueOf(temp_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.TempCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @param value The temp to set.
       * @return This builder for chaining.
       */
      public Builder setTemp(org.fieldkit.atlas.pb.FkAtlas.TempCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        temp_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemp() {
        
        temp_ = 0;
        onChanged();
        return this;
      }

      private int dissolvedOxygen_ = 0;
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @return The enum numeric value on the wire for dissolvedOxygen.
       */
      public int getDissolvedOxygenValue() {
        return dissolvedOxygen_;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @param value The enum numeric value on the wire for dissolvedOxygen to set.
       * @return This builder for chaining.
       */
      public Builder setDissolvedOxygenValue(int value) {
        dissolvedOxygen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @return The dissolvedOxygen.
       */
      public org.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.DoCalibrations result = org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.valueOf(dissolvedOxygen_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.DoCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @param value The dissolvedOxygen to set.
       * @return This builder for chaining.
       */
      public Builder setDissolvedOxygen(org.fieldkit.atlas.pb.FkAtlas.DoCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dissolvedOxygen_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDissolvedOxygen() {
        
        dissolvedOxygen_ = 0;
        onChanged();
        return this;
      }

      private int ph_ = 0;
      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @return The enum numeric value on the wire for ph.
       */
      public int getPhValue() {
        return ph_;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @param value The enum numeric value on the wire for ph to set.
       * @return This builder for chaining.
       */
      public Builder setPhValue(int value) {
        ph_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @return The ph.
       */
      public org.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.PhCalibrations result = org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.valueOf(ph_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.PhCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @param value The ph to set.
       * @return This builder for chaining.
       */
      public Builder setPh(org.fieldkit.atlas.pb.FkAtlas.PhCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        ph_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPh() {
        
        ph_ = 0;
        onChanged();
        return this;
      }

      private int ec_ = 0;
      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @return The enum numeric value on the wire for ec.
       */
      public int getEcValue() {
        return ec_;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @param value The enum numeric value on the wire for ec to set.
       * @return This builder for chaining.
       */
      public Builder setEcValue(int value) {
        ec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @return The ec.
       */
      public org.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.EcCalibrations result = org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.valueOf(ec_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.EcCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @param value The ec to set.
       * @return This builder for chaining.
       */
      public Builder setEc(org.fieldkit.atlas.pb.FkAtlas.EcCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        ec_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEc() {
        
        ec_ = 0;
        onChanged();
        return this;
      }

      private int orp_ = 0;
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @return The enum numeric value on the wire for orp.
       */
      public int getOrpValue() {
        return orp_;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @param value The enum numeric value on the wire for orp to set.
       * @return This builder for chaining.
       */
      public Builder setOrpValue(int value) {
        orp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @return The orp.
       */
      public org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations result = org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.valueOf(orp_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @param value The orp to set.
       * @return This builder for chaining.
       */
      public Builder setOrp(org.fieldkit.atlas.pb.FkAtlas.OrpCalibrations value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        orp_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrp() {
        
        orp_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:fk_atlas.AtlasCalibrationStatus)
    }

    // @@protoc_insertion_point(class_scope:fk_atlas.AtlasCalibrationStatus)
    private static final org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus();
    }

    public static org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AtlasCalibrationStatus>
        PARSER = new com.google.protobuf.AbstractParser<AtlasCalibrationStatus>() {
      @java.lang.Override
      public AtlasCalibrationStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AtlasCalibrationStatus(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AtlasCalibrationStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AtlasCalibrationStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TwoWireReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.TwoWireReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code fk_atlas.TwoWireReply}
   */
  public  static final class TwoWireReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:fk_atlas.TwoWireReply)
      TwoWireReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TwoWireReply.newBuilder() to construct.
    private TwoWireReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TwoWireReply() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TwoWireReply();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TwoWireReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.class, org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fieldkit.atlas.pb.FkAtlas.TwoWireReply)) {
        return super.equals(obj);
      }
      org.fieldkit.atlas.pb.FkAtlas.TwoWireReply other = (org.fieldkit.atlas.pb.FkAtlas.TwoWireReply) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fieldkit.atlas.pb.FkAtlas.TwoWireReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fk_atlas.TwoWireReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.TwoWireReply)
        org.fieldkit.atlas.pb.FkAtlas.TwoWireReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireReply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.class, org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.Builder.class);
      }

      // Construct using org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_TwoWireReply_descriptor;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireReply getDefaultInstanceForType() {
        return org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.getDefaultInstance();
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireReply build() {
        org.fieldkit.atlas.pb.FkAtlas.TwoWireReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireReply buildPartial() {
        org.fieldkit.atlas.pb.FkAtlas.TwoWireReply result = new org.fieldkit.atlas.pb.FkAtlas.TwoWireReply(this);
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fieldkit.atlas.pb.FkAtlas.TwoWireReply) {
          return mergeFrom((org.fieldkit.atlas.pb.FkAtlas.TwoWireReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fieldkit.atlas.pb.FkAtlas.TwoWireReply other) {
        if (other == org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fieldkit.atlas.pb.FkAtlas.TwoWireReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fieldkit.atlas.pb.FkAtlas.TwoWireReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:fk_atlas.TwoWireReply)
    }

    // @@protoc_insertion_point(class_scope:fk_atlas.TwoWireReply)
    private static final org.fieldkit.atlas.pb.FkAtlas.TwoWireReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fieldkit.atlas.pb.FkAtlas.TwoWireReply();
    }

    public static org.fieldkit.atlas.pb.FkAtlas.TwoWireReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TwoWireReply>
        PARSER = new com.google.protobuf.AbstractParser<TwoWireReply>() {
      @java.lang.Override
      public TwoWireReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TwoWireReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TwoWireReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TwoWireReply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.fieldkit.atlas.pb.FkAtlas.TwoWireReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.Error)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @return The type.
     */
    org.fieldkit.atlas.pb.FkAtlas.ErrorType getType();

    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code fk_atlas.Error}
   */
  public  static final class Error extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:fk_atlas.Error)
      ErrorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Error.newBuilder() to construct.
    private Error(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Error() {
      type_ = 0;
      message_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Error();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Error(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_Error_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_Error_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fieldkit.atlas.pb.FkAtlas.Error.class, org.fieldkit.atlas.pb.FkAtlas.Error.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @return The type.
     */
    public org.fieldkit.atlas.pb.FkAtlas.ErrorType getType() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.ErrorType result = org.fieldkit.atlas.pb.FkAtlas.ErrorType.valueOf(type_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.ErrorType.UNRECOGNIZED : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object message_;
    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.fieldkit.atlas.pb.FkAtlas.ErrorType.NONE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, message_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.fieldkit.atlas.pb.FkAtlas.ErrorType.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, message_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fieldkit.atlas.pb.FkAtlas.Error)) {
        return super.equals(obj);
      }
      org.fieldkit.atlas.pb.FkAtlas.Error other = (org.fieldkit.atlas.pb.FkAtlas.Error) obj;

      if (type_ != other.type_) return false;
      if (!getMessage()
          .equals(other.getMessage())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fieldkit.atlas.pb.FkAtlas.Error prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fk_atlas.Error}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.Error)
        org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_Error_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_Error_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fieldkit.atlas.pb.FkAtlas.Error.class, org.fieldkit.atlas.pb.FkAtlas.Error.Builder.class);
      }

      // Construct using org.fieldkit.atlas.pb.FkAtlas.Error.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        message_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_Error_descriptor;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.Error getDefaultInstanceForType() {
        return org.fieldkit.atlas.pb.FkAtlas.Error.getDefaultInstance();
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.Error build() {
        org.fieldkit.atlas.pb.FkAtlas.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.Error buildPartial() {
        org.fieldkit.atlas.pb.FkAtlas.Error result = new org.fieldkit.atlas.pb.FkAtlas.Error(this);
        result.type_ = type_;
        result.message_ = message_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fieldkit.atlas.pb.FkAtlas.Error) {
          return mergeFrom((org.fieldkit.atlas.pb.FkAtlas.Error)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fieldkit.atlas.pb.FkAtlas.Error other) {
        if (other == org.fieldkit.atlas.pb.FkAtlas.Error.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fieldkit.atlas.pb.FkAtlas.Error parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fieldkit.atlas.pb.FkAtlas.Error) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @return The type.
       */
      public org.fieldkit.atlas.pb.FkAtlas.ErrorType getType() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.ErrorType result = org.fieldkit.atlas.pb.FkAtlas.ErrorType.valueOf(type_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.ErrorType.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.fieldkit.atlas.pb.FkAtlas.ErrorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>string message = 2;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string message = 2;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:fk_atlas.Error)
    }

    // @@protoc_insertion_point(class_scope:fk_atlas.Error)
    private static final org.fieldkit.atlas.pb.FkAtlas.Error DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fieldkit.atlas.pb.FkAtlas.Error();
    }

    public static org.fieldkit.atlas.pb.FkAtlas.Error getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Error>
        PARSER = new com.google.protobuf.AbstractParser<Error>() {
      @java.lang.Override
      public Error parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Error(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Error> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Error> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.fieldkit.atlas.pb.FkAtlas.Error getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WireAtlasReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.WireAtlasReply)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @return The type.
     */
    org.fieldkit.atlas.pb.FkAtlas.ReplyType getType();

    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    java.util.List<org.fieldkit.atlas.pb.FkAtlas.Error> 
        getErrorsList();
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    org.fieldkit.atlas.pb.FkAtlas.Error getErrors(int index);
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    int getErrorsCount();
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    java.util.List<? extends org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder> 
        getErrorsOrBuilderList();
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder getErrorsOrBuilder(
        int index);

    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     * @return Whether the calibration field is set.
     */
    boolean hasCalibration();
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     * @return The calibration.
     */
    org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getCalibration();
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     */
    org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatusOrBuilder getCalibrationOrBuilder();

    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     * @return Whether the wire field is set.
     */
    boolean hasWire();
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     * @return The wire.
     */
    org.fieldkit.atlas.pb.FkAtlas.TwoWireReply getWire();
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     */
    org.fieldkit.atlas.pb.FkAtlas.TwoWireReplyOrBuilder getWireOrBuilder();
  }
  /**
   * Protobuf type {@code fk_atlas.WireAtlasReply}
   */
  public  static final class WireAtlasReply extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:fk_atlas.WireAtlasReply)
      WireAtlasReplyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WireAtlasReply.newBuilder() to construct.
    private WireAtlasReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WireAtlasReply() {
      type_ = 0;
      errors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WireAtlasReply();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WireAtlasReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                errors_ = new java.util.ArrayList<org.fieldkit.atlas.pb.FkAtlas.Error>();
                mutable_bitField0_ |= 0x00000001;
              }
              errors_.add(
                  input.readMessage(org.fieldkit.atlas.pb.FkAtlas.Error.parser(), extensionRegistry));
              break;
            }
            case 26: {
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.Builder subBuilder = null;
              if (calibration_ != null) {
                subBuilder = calibration_.toBuilder();
              }
              calibration_ = input.readMessage(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(calibration_);
                calibration_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.Builder subBuilder = null;
              if (wire_ != null) {
                subBuilder = wire_.toBuilder();
              }
              wire_ = input.readMessage(org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wire_);
                wire_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          errors_ = java.util.Collections.unmodifiableList(errors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply.class, org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @return The type.
     */
    public org.fieldkit.atlas.pb.FkAtlas.ReplyType getType() {
      @SuppressWarnings("deprecation")
      org.fieldkit.atlas.pb.FkAtlas.ReplyType result = org.fieldkit.atlas.pb.FkAtlas.ReplyType.valueOf(type_);
      return result == null ? org.fieldkit.atlas.pb.FkAtlas.ReplyType.UNRECOGNIZED : result;
    }

    public static final int ERRORS_FIELD_NUMBER = 2;
    private java.util.List<org.fieldkit.atlas.pb.FkAtlas.Error> errors_;
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    public java.util.List<org.fieldkit.atlas.pb.FkAtlas.Error> getErrorsList() {
      return errors_;
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    public java.util.List<? extends org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder> 
        getErrorsOrBuilderList() {
      return errors_;
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    public int getErrorsCount() {
      return errors_.size();
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    public org.fieldkit.atlas.pb.FkAtlas.Error getErrors(int index) {
      return errors_.get(index);
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    public org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder getErrorsOrBuilder(
        int index) {
      return errors_.get(index);
    }

    public static final int CALIBRATION_FIELD_NUMBER = 3;
    private org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus calibration_;
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     * @return Whether the calibration field is set.
     */
    public boolean hasCalibration() {
      return calibration_ != null;
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     * @return The calibration.
     */
    public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getCalibration() {
      return calibration_ == null ? org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.getDefaultInstance() : calibration_;
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     */
    public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatusOrBuilder getCalibrationOrBuilder() {
      return getCalibration();
    }

    public static final int WIRE_FIELD_NUMBER = 4;
    private org.fieldkit.atlas.pb.FkAtlas.TwoWireReply wire_;
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     * @return Whether the wire field is set.
     */
    public boolean hasWire() {
      return wire_ != null;
    }
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     * @return The wire.
     */
    public org.fieldkit.atlas.pb.FkAtlas.TwoWireReply getWire() {
      return wire_ == null ? org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.getDefaultInstance() : wire_;
    }
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     */
    public org.fieldkit.atlas.pb.FkAtlas.TwoWireReplyOrBuilder getWireOrBuilder() {
      return getWire();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != org.fieldkit.atlas.pb.FkAtlas.ReplyType.REPLY_NONE.getNumber()) {
        output.writeEnum(1, type_);
      }
      for (int i = 0; i < errors_.size(); i++) {
        output.writeMessage(2, errors_.get(i));
      }
      if (calibration_ != null) {
        output.writeMessage(3, getCalibration());
      }
      if (wire_ != null) {
        output.writeMessage(4, getWire());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != org.fieldkit.atlas.pb.FkAtlas.ReplyType.REPLY_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      for (int i = 0; i < errors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, errors_.get(i));
      }
      if (calibration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCalibration());
      }
      if (wire_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getWire());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply)) {
        return super.equals(obj);
      }
      org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply other = (org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply) obj;

      if (type_ != other.type_) return false;
      if (!getErrorsList()
          .equals(other.getErrorsList())) return false;
      if (hasCalibration() != other.hasCalibration()) return false;
      if (hasCalibration()) {
        if (!getCalibration()
            .equals(other.getCalibration())) return false;
      }
      if (hasWire() != other.hasWire()) return false;
      if (hasWire()) {
        if (!getWire()
            .equals(other.getWire())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (getErrorsCount() > 0) {
        hash = (37 * hash) + ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + getErrorsList().hashCode();
      }
      if (hasCalibration()) {
        hash = (37 * hash) + CALIBRATION_FIELD_NUMBER;
        hash = (53 * hash) + getCalibration().hashCode();
      }
      if (hasWire()) {
        hash = (37 * hash) + WIRE_FIELD_NUMBER;
        hash = (53 * hash) + getWire().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fk_atlas.WireAtlasReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.WireAtlasReply)
        org.fieldkit.atlas.pb.FkAtlas.WireAtlasReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasReply_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply.class, org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply.Builder.class);
      }

      // Construct using org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getErrorsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        if (errorsBuilder_ == null) {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          errorsBuilder_.clear();
        }
        if (calibrationBuilder_ == null) {
          calibration_ = null;
        } else {
          calibration_ = null;
          calibrationBuilder_ = null;
        }
        if (wireBuilder_ == null) {
          wire_ = null;
        } else {
          wire_ = null;
          wireBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.fieldkit.atlas.pb.FkAtlas.internal_static_fk_atlas_WireAtlasReply_descriptor;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply getDefaultInstanceForType() {
        return org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply.getDefaultInstance();
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply build() {
        org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply buildPartial() {
        org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply result = new org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        if (errorsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            errors_ = java.util.Collections.unmodifiableList(errors_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.errors_ = errors_;
        } else {
          result.errors_ = errorsBuilder_.build();
        }
        if (calibrationBuilder_ == null) {
          result.calibration_ = calibration_;
        } else {
          result.calibration_ = calibrationBuilder_.build();
        }
        if (wireBuilder_ == null) {
          result.wire_ = wire_;
        } else {
          result.wire_ = wireBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply) {
          return mergeFrom((org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply other) {
        if (other == org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (errorsBuilder_ == null) {
          if (!other.errors_.isEmpty()) {
            if (errors_.isEmpty()) {
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureErrorsIsMutable();
              errors_.addAll(other.errors_);
            }
            onChanged();
          }
        } else {
          if (!other.errors_.isEmpty()) {
            if (errorsBuilder_.isEmpty()) {
              errorsBuilder_.dispose();
              errorsBuilder_ = null;
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000001);
              errorsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getErrorsFieldBuilder() : null;
            } else {
              errorsBuilder_.addAllMessages(other.errors_);
            }
          }
        }
        if (other.hasCalibration()) {
          mergeCalibration(other.getCalibration());
        }
        if (other.hasWire()) {
          mergeWire(other.getWire());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @return The type.
       */
      public org.fieldkit.atlas.pb.FkAtlas.ReplyType getType() {
        @SuppressWarnings("deprecation")
        org.fieldkit.atlas.pb.FkAtlas.ReplyType result = org.fieldkit.atlas.pb.FkAtlas.ReplyType.valueOf(type_);
        return result == null ? org.fieldkit.atlas.pb.FkAtlas.ReplyType.UNRECOGNIZED : result;
      }
      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.fieldkit.atlas.pb.FkAtlas.ReplyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.fieldkit.atlas.pb.FkAtlas.Error> errors_ =
        java.util.Collections.emptyList();
      private void ensureErrorsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          errors_ = new java.util.ArrayList<org.fieldkit.atlas.pb.FkAtlas.Error>(errors_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.Error, org.fieldkit.atlas.pb.FkAtlas.Error.Builder, org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder> errorsBuilder_;

      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public java.util.List<org.fieldkit.atlas.pb.FkAtlas.Error> getErrorsList() {
        if (errorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(errors_);
        } else {
          return errorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public int getErrorsCount() {
        if (errorsBuilder_ == null) {
          return errors_.size();
        } else {
          return errorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.Error getErrors(int index) {
        if (errorsBuilder_ == null) {
          return errors_.get(index);
        } else {
          return errorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder setErrors(
          int index, org.fieldkit.atlas.pb.FkAtlas.Error value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.set(index, value);
          onChanged();
        } else {
          errorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder setErrors(
          int index, org.fieldkit.atlas.pb.FkAtlas.Error.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.set(index, builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addErrors(org.fieldkit.atlas.pb.FkAtlas.Error value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.add(value);
          onChanged();
        } else {
          errorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addErrors(
          int index, org.fieldkit.atlas.pb.FkAtlas.Error value) {
        if (errorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureErrorsIsMutable();
          errors_.add(index, value);
          onChanged();
        } else {
          errorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addErrors(
          org.fieldkit.atlas.pb.FkAtlas.Error.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.add(builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addErrors(
          int index, org.fieldkit.atlas.pb.FkAtlas.Error.Builder builderForValue) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.add(index, builderForValue.build());
          onChanged();
        } else {
          errorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addAllErrors(
          java.lang.Iterable<? extends org.fieldkit.atlas.pb.FkAtlas.Error> values) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, errors_);
          onChanged();
        } else {
          errorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder clearErrors() {
        if (errorsBuilder_ == null) {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          errorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder removeErrors(int index) {
        if (errorsBuilder_ == null) {
          ensureErrorsIsMutable();
          errors_.remove(index);
          onChanged();
        } else {
          errorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.Error.Builder getErrorsBuilder(
          int index) {
        return getErrorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder getErrorsOrBuilder(
          int index) {
        if (errorsBuilder_ == null) {
          return errors_.get(index);  } else {
          return errorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public java.util.List<? extends org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder> 
           getErrorsOrBuilderList() {
        if (errorsBuilder_ != null) {
          return errorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(errors_);
        }
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.Error.Builder addErrorsBuilder() {
        return getErrorsFieldBuilder().addBuilder(
            org.fieldkit.atlas.pb.FkAtlas.Error.getDefaultInstance());
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.Error.Builder addErrorsBuilder(
          int index) {
        return getErrorsFieldBuilder().addBuilder(
            index, org.fieldkit.atlas.pb.FkAtlas.Error.getDefaultInstance());
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public java.util.List<org.fieldkit.atlas.pb.FkAtlas.Error.Builder> 
           getErrorsBuilderList() {
        return getErrorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.Error, org.fieldkit.atlas.pb.FkAtlas.Error.Builder, org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder> 
          getErrorsFieldBuilder() {
        if (errorsBuilder_ == null) {
          errorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.fieldkit.atlas.pb.FkAtlas.Error, org.fieldkit.atlas.pb.FkAtlas.Error.Builder, org.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder>(
                  errors_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          errors_ = null;
        }
        return errorsBuilder_;
      }

      private org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus calibration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.Builder, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatusOrBuilder> calibrationBuilder_;
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       * @return Whether the calibration field is set.
       */
      public boolean hasCalibration() {
        return calibrationBuilder_ != null || calibration_ != null;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       * @return The calibration.
       */
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getCalibration() {
        if (calibrationBuilder_ == null) {
          return calibration_ == null ? org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.getDefaultInstance() : calibration_;
        } else {
          return calibrationBuilder_.getMessage();
        }
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public Builder setCalibration(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus value) {
        if (calibrationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calibration_ = value;
          onChanged();
        } else {
          calibrationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public Builder setCalibration(
          org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.Builder builderForValue) {
        if (calibrationBuilder_ == null) {
          calibration_ = builderForValue.build();
          onChanged();
        } else {
          calibrationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public Builder mergeCalibration(org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus value) {
        if (calibrationBuilder_ == null) {
          if (calibration_ != null) {
            calibration_ =
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.newBuilder(calibration_).mergeFrom(value).buildPartial();
          } else {
            calibration_ = value;
          }
          onChanged();
        } else {
          calibrationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public Builder clearCalibration() {
        if (calibrationBuilder_ == null) {
          calibration_ = null;
          onChanged();
        } else {
          calibration_ = null;
          calibrationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.Builder getCalibrationBuilder() {
        
        onChanged();
        return getCalibrationFieldBuilder().getBuilder();
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatusOrBuilder getCalibrationOrBuilder() {
        if (calibrationBuilder_ != null) {
          return calibrationBuilder_.getMessageOrBuilder();
        } else {
          return calibration_ == null ?
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.getDefaultInstance() : calibration_;
        }
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.Builder, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatusOrBuilder> 
          getCalibrationFieldBuilder() {
        if (calibrationBuilder_ == null) {
          calibrationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.Builder, org.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatusOrBuilder>(
                  getCalibration(),
                  getParentForChildren(),
                  isClean());
          calibration_ = null;
        }
        return calibrationBuilder_;
      }

      private org.fieldkit.atlas.pb.FkAtlas.TwoWireReply wire_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.TwoWireReply, org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.Builder, org.fieldkit.atlas.pb.FkAtlas.TwoWireReplyOrBuilder> wireBuilder_;
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       * @return Whether the wire field is set.
       */
      public boolean hasWire() {
        return wireBuilder_ != null || wire_ != null;
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       * @return The wire.
       */
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireReply getWire() {
        if (wireBuilder_ == null) {
          return wire_ == null ? org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.getDefaultInstance() : wire_;
        } else {
          return wireBuilder_.getMessage();
        }
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public Builder setWire(org.fieldkit.atlas.pb.FkAtlas.TwoWireReply value) {
        if (wireBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wire_ = value;
          onChanged();
        } else {
          wireBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public Builder setWire(
          org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.Builder builderForValue) {
        if (wireBuilder_ == null) {
          wire_ = builderForValue.build();
          onChanged();
        } else {
          wireBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public Builder mergeWire(org.fieldkit.atlas.pb.FkAtlas.TwoWireReply value) {
        if (wireBuilder_ == null) {
          if (wire_ != null) {
            wire_ =
              org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.newBuilder(wire_).mergeFrom(value).buildPartial();
          } else {
            wire_ = value;
          }
          onChanged();
        } else {
          wireBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public Builder clearWire() {
        if (wireBuilder_ == null) {
          wire_ = null;
          onChanged();
        } else {
          wire_ = null;
          wireBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.Builder getWireBuilder() {
        
        onChanged();
        return getWireFieldBuilder().getBuilder();
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public org.fieldkit.atlas.pb.FkAtlas.TwoWireReplyOrBuilder getWireOrBuilder() {
        if (wireBuilder_ != null) {
          return wireBuilder_.getMessageOrBuilder();
        } else {
          return wire_ == null ?
              org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.getDefaultInstance() : wire_;
        }
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.fieldkit.atlas.pb.FkAtlas.TwoWireReply, org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.Builder, org.fieldkit.atlas.pb.FkAtlas.TwoWireReplyOrBuilder> 
          getWireFieldBuilder() {
        if (wireBuilder_ == null) {
          wireBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.fieldkit.atlas.pb.FkAtlas.TwoWireReply, org.fieldkit.atlas.pb.FkAtlas.TwoWireReply.Builder, org.fieldkit.atlas.pb.FkAtlas.TwoWireReplyOrBuilder>(
                  getWire(),
                  getParentForChildren(),
                  isClean());
          wire_ = null;
        }
        return wireBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:fk_atlas.WireAtlasReply)
    }

    // @@protoc_insertion_point(class_scope:fk_atlas.WireAtlasReply)
    private static final org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply();
    }

    public static org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WireAtlasReply>
        PARSER = new com.google.protobuf.AbstractParser<WireAtlasReply>() {
      @java.lang.Override
      public WireAtlasReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WireAtlasReply(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WireAtlasReply> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WireAtlasReply> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.fieldkit.atlas.pb.FkAtlas.WireAtlasReply getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fk_atlas_AtlasCalibrationCommand_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fk_atlas_AtlasCalibrationCommand_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fk_atlas_TwoWireQuery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fk_atlas_TwoWireQuery_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fk_atlas_WireAtlasQuery_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fk_atlas_WireAtlasQuery_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fk_atlas_AtlasCalibrationStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fk_atlas_AtlasCalibrationStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fk_atlas_TwoWireReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fk_atlas_TwoWireReply_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fk_atlas_Error_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fk_atlas_Error_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fk_atlas_WireAtlasReply_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fk_atlas_WireAtlasReply_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016fk-atlas.proto\022\010fk_atlas\"\273\002\n\027AtlasCali" +
      "brationCommand\0221\n\toperation\030\001 \001(\0162\036.fk_a" +
      "tlas.CalibrationOperation\022(\n\004temp\030\002 \001(\0162" +
      "\032.fk_atlas.TempCalibrations\0221\n\017dissolved" +
      "Oxygen\030\003 \001(\0162\030.fk_atlas.DoCalibrations\022$" +
      "\n\002ph\030\004 \001(\0162\030.fk_atlas.PhCalibrations\022$\n\002" +
      "ec\030\005 \001(\0162\030.fk_atlas.EcCalibrations\022&\n\003or" +
      "p\030\006 \001(\0162\031.fk_atlas.OrpCalibrations\022\r\n\005wh" +
      "ich\030\010 \001(\r\022\r\n\005value\030\007 \001(\002\"9\n\014TwoWireQuery" +
      "\022\014\n\004read\030\001 \001(\r\022\r\n\005write\030\002 \001(\r\022\014\n\004data\030\003 " +
      "\001(\014\"\221\001\n\016WireAtlasQuery\022!\n\004type\030\001 \001(\0162\023.f" +
      "k_atlas.QueryType\0226\n\013calibration\030\002 \001(\0132!" +
      ".fk_atlas.AtlasCalibrationCommand\022$\n\004wir" +
      "e\030\003 \001(\0132\026.fk_atlas.TwoWireQuery\"\250\002\n\026Atla" +
      "sCalibrationStatus\022\"\n\004type\030\001 \001(\0162\024.fk_at" +
      "las.SensorType\022\014\n\004time\030\002 \001(\r\022\013\n\003raw\030\010 \001(" +
      "\r\022(\n\004temp\030\003 \001(\0162\032.fk_atlas.TempCalibrati" +
      "ons\0221\n\017dissolvedOxygen\030\004 \001(\0162\030.fk_atlas." +
      "DoCalibrations\022$\n\002ph\030\005 \001(\0162\030.fk_atlas.Ph" +
      "Calibrations\022$\n\002ec\030\006 \001(\0162\030.fk_atlas.EcCa" +
      "librations\022&\n\003orp\030\007 \001(\0162\031.fk_atlas.OrpCa" +
      "librations\"\034\n\014TwoWireReply\022\014\n\004data\030\001 \001(\014" +
      "\";\n\005Error\022!\n\004type\030\001 \001(\0162\023.fk_atlas.Error" +
      "Type\022\017\n\007message\030\002 \001(\t\"\261\001\n\016WireAtlasReply" +
      "\022!\n\004type\030\001 \001(\0162\023.fk_atlas.ReplyType\022\037\n\006e" +
      "rrors\030\002 \003(\0132\017.fk_atlas.Error\0225\n\013calibrat" +
      "ion\030\003 \001(\0132 .fk_atlas.AtlasCalibrationSta" +
      "tus\022$\n\004wire\030\004 \001(\0132\026.fk_atlas.TwoWireRepl" +
      "y*k\n\nSensorType\022\017\n\013SENSOR_NONE\020\000\022\r\n\tSENS" +
      "OR_PH\020\001\022\017\n\013SENSOR_TEMP\020\002\022\016\n\nSENSOR_ORP\020\003" +
      "\022\r\n\tSENSOR_DO\020\004\022\r\n\tSENSOR_EC\020\005*\033\n\tQueryT" +
      "ype\022\016\n\nQUERY_NONE\020\000*p\n\024CalibrationOperat" +
      "ion\022\024\n\020CALIBRATION_NONE\020\000\022\026\n\022CALIBRATION" +
      "_STATUS\020\001\022\025\n\021CALIBRATION_CLEAR\020\002\022\023\n\017CALI" +
      "BRATION_SET\020\003*2\n\020TempCalibrations\022\r\n\tTEM" +
      "P_NONE\020\000\022\017\n\013TEMP_SINGLE\020\001*=\n\016DoCalibrati" +
      "ons\022\013\n\007DO_NONE\020\000\022\021\n\rDO_ATMOSPHERE\020\001\022\013\n\007D" +
      "O_ZERO\020\002*E\n\016PhCalibrations\022\013\n\007PH_NONE\020\000\022" +
      "\n\n\006PH_LOW\020\001\022\r\n\tPH_MIDDLE\020\002\022\013\n\007PH_HIGH\020\004*" +
      "\211\001\n\022PhCalibrateCommand\022\025\n\021CALIBRATE_PH_N" +
      "ONE\020\000\022\026\n\022CALIBRATE_PH_CLEAR\020\001\022\024\n\020CALIBRA" +
      "TE_PH_LOW\020\002\022\027\n\023CALIBRATE_PH_MIDDLE\020\003\022\025\n\021" +
      "CALIBRATE_PH_HIGH\020\004*[\n\016EcCalibrations\022\013\n" +
      "\007EC_NONE\020\000\022\n\n\006EC_DRY\020\001\022\r\n\tEC_SINGLE\020\002\022\017\n" +
      "\013EC_DUAL_LOW\020\004\022\020\n\014EC_DUAL_HIGH\020\010*/\n\017OrpC" +
      "alibrations\022\014\n\010ORP_NONE\020\000\022\016\n\nORP_SINGLE\020" +
      "\001*b\n\tReplyType\022\016\n\nREPLY_NONE\020\000\022\017\n\013REPLY_" +
      "RETRY\020\001\022\017\n\013REPLY_ERROR\020\002\022\020\n\014REPLY_STATUS" +
      "\020\003\022\021\n\rREPLY_COMMAND\020\004*2\n\tErrorType\022\010\n\004NO" +
      "NE\020\000\022\013\n\007GENERAL\020\001\022\016\n\nUNEXPECTED\020\002B\027\n\025org" +
      ".fieldkit.atlas.pbb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_fk_atlas_AtlasCalibrationCommand_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_fk_atlas_AtlasCalibrationCommand_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fk_atlas_AtlasCalibrationCommand_descriptor,
        new java.lang.String[] { "Operation", "Temp", "DissolvedOxygen", "Ph", "Ec", "Orp", "Which", "Value", });
    internal_static_fk_atlas_TwoWireQuery_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_fk_atlas_TwoWireQuery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fk_atlas_TwoWireQuery_descriptor,
        new java.lang.String[] { "Read", "Write", "Data", });
    internal_static_fk_atlas_WireAtlasQuery_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_fk_atlas_WireAtlasQuery_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fk_atlas_WireAtlasQuery_descriptor,
        new java.lang.String[] { "Type", "Calibration", "Wire", });
    internal_static_fk_atlas_AtlasCalibrationStatus_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_fk_atlas_AtlasCalibrationStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fk_atlas_AtlasCalibrationStatus_descriptor,
        new java.lang.String[] { "Type", "Time", "Raw", "Temp", "DissolvedOxygen", "Ph", "Ec", "Orp", });
    internal_static_fk_atlas_TwoWireReply_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_fk_atlas_TwoWireReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fk_atlas_TwoWireReply_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_fk_atlas_Error_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_fk_atlas_Error_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fk_atlas_Error_descriptor,
        new java.lang.String[] { "Type", "Message", });
    internal_static_fk_atlas_WireAtlasReply_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_fk_atlas_WireAtlasReply_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fk_atlas_WireAtlasReply_descriptor,
        new java.lang.String[] { "Type", "Errors", "Calibration", "Wire", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
